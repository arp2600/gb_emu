pub const JOYP: usize = 0xff00;
pub const SB: usize = 0xff01;
pub const DIV: usize = 0xff04;
pub const TIMA: usize = 0xff05;
pub const TMA: usize = 0xff06;
pub const TAC: usize = 0xff07;
pub const IF: usize = 0xff0f;
pub const IE: usize = 0xffff;
pub const LCDC: usize = 0xff40;
pub const STAT: usize = 0xff41;
pub const SCY: usize = 0xff42;
pub const SCX: usize = 0xff43;
pub const LY: usize = 0xff44;
pub const LYC: usize = 0xff45;
pub const WY: usize = 0xff4a;
pub const WX: usize = 0xff4b;
pub const DMA: usize = 0xff46;
pub const BGP: usize = 0xff47;
pub const OBP0: usize = 0xff48;
pub const OBP1: usize = 0xff49;
// HDMA1 = 0xff51,
// HDMA2 = 0xff52,
// HDMA3 = 0xff53,
// HDMA4 = 0xff54,
// HDMA5 = 0xff55,
// BCPS = 0xff68,
// BCPD = 0xff69,
// OCPS = 0xff6a,
// OCPD = 0xff6b,
pub const BOOT_ROM_DISABLE: usize = 0xff50;
pub const SC: usize = 0xff02;
pub const NR52: usize = 0xff26;
pub const NR51: usize = 0xff25;
pub const NR50: usize = 0xff24;
pub const NR12: usize = 0xff12;
pub const NR22: usize = 0xff17;
pub const NR42: usize = 0xff21;
pub const NR14: usize = 0xff14;
pub const NR24: usize = 0xff19;
pub const NR44: usize = 0xff23;
pub const NR10: usize = 0xff10;
pub const NR30: usize = 0xff1a;
pub const NR11: usize = 0xff11;
pub const NR13: usize = 0xff13;
pub const NR21: usize = 0xff16;
pub const NR23: usize = 0xff18;
pub const WAVE_PATTERN_RAM_START: usize = 0xff30;
pub const WAVE_PATTERN_RAM_END: usize = 0xff3f;
pub const NR31: usize = 0xff1b;
pub const NR32: usize = 0xff1c;
pub const NR33: usize = 0xff1d;
pub const NR34: usize = 0xff1e;
pub const NR41: usize = 0xff20;
pub const NR43: usize = 0xff22;

pub fn io_reg_description(index: usize) -> String {
    match index {
        SCX => format!("SCX - Scroll X"),
        SC => format!("SC - Serial Transfer Control"),
        NR52 => format!("NR52 - Sound on/off"),
        NR51 => format!("NR51 - Selection of Sound output terminal"),
        NR50 => format!("NR50 - Channel control / ON-OFF / Volume"),
        NR12 => format!("NR12 - Channel 1 Volume Envelope"),
        NR22 => format!("NR22 - Channel 2 Volume Envelope"),
        NR42 => format!("NR42 - Channel 4 Volume Envelope"),
        NR14 => format!("NR14 - Channel 1 Frequency hi"),
        NR24 => format!("NR24 - Channel 2 Frequency hi data"),
        NR44 => format!("NR44 - Channel 4 Counter/consecutive; Inital"),
        NR10 => format!("NR10 - Channel 1 Sweep register"),
        NR30 => format!("NR30 - Channel 3 Sound on/off"),
        WY => format!("WY - Window Y Position"),
        WX => format!("WX - Window X Position minus 7"),
        NR11 => format!("NR11 - Channel 1 Sound length/Wave pattern duty"),
        NR13 => format!("NR13 - Channel 1 Frequency lo"),
        NR21 => format!("NR21 - Channel 2 Sound Length/Wave Pattern Duty"),
        NR23 => format!("NR23 - Channel 2 Frequency lo data"),
        WAVE_PATTERN_RAM_START...WAVE_PATTERN_RAM_END => format!("Wave Pattern RAM"),
        NR31 => format!("NR31 - Channel 3 Sound Length"),
        NR32 => format!("NR32 - Channel 3 Select output level"),
        NR33 => format!("NR33 - Channel 3 Frequency's lower data"),
        NR34 => format!("NR34 - Channel 3 Frequency's higher data"),
        NR41 => format!("NR41 - Channel 4 Sound Length"),
        NR43 => format!("NR43 - Channel 4 Polynomial Counter"),
        _ => format!("{:#06x}", index),
    }
}
